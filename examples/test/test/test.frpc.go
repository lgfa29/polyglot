// Code generated by polyglot-go Go v0.5.1, DO NOT EDIT.
// source: test.proto

package test

import (
	"errors"
	"github.com/loopholelabs/polyglot-go"
)

var (
	NilDecode = errors.New("cannot decode into a nil root struct")
)

type Test struct {
	Test1 int32
	Test2 int32
}

func NewTest() *Test {
	return &Test{}
}

func (x *Test) Error(b *polyglot.Buffer, err error) {
	polyglot.Encoder(b).Error(err)
}

func (x *Test) Encode(b *polyglot.Buffer) {
	if x == nil {
		polyglot.Encoder(b).Nil()
	} else {

		polyglot.Encoder(b).Int32(x.Test1).Int32(x.Test2)
	}
}

func (x *Test) Decode(b []byte) error {
	if x == nil {
		return NilDecode
	}
	d := polyglot.GetDecoder(b)
	defer d.Return()
	return x.decode(d)
}

func (x *Test) decode(d *polyglot.Decoder) error {
	if d.Nil() {
		return nil
	}

	var err error

	x.Test1, err = d.Int32()
	if err != nil {
		return err
	}
	x.Test2, err = d.Int32()
	if err != nil {
		return err
	}
	return nil
}
